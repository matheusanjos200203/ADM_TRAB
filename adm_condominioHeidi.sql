DROP DATABASE IF EXISTS ADMINISTRADORA;

CREATE DATABASE IF NOT EXISTS ADMINISTRADORA;

USE ADMINISTRADORA;

-- DROPANDO AS TABELAS PARA TESTE
DROP TABLE IF EXISTS CONDOMINIO;
DROP TABLE IF EXISTS PROPRIETARIO;
DROP TABLE IF EXISTS LOCATARIO;
DROP TABLE IF EXISTS SINDICO;
DROP TABLE IF EXISTS UNIDADE_HABITACIONAL;
DROP TABLE IF EXISTS ALUGUEL;
DROP TABLE IF EXISTS taxa;

-- TABELA DE CONDOMINIO
CREATE TABLE CONDOMINIO (
    IDCONDOMINIO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30) NOT NULL,
    ENDERECO VARCHAR(50) NOT NULL
);

-- TABELA DE PROPRIETARIO
/*A MENOS QUE SEJA ADICIONADO UMA CLÁUSULA COMO CPF, SERÁ POSSÍVEL COLOCAR DUAS VEZES
  A MESMA PESSOA, POIS A JUNÇÃO DE NOME E ENDEREÇO NÃO É O SUFICIENTE PARA INDIVIDUALIZAR
  UMA PESSOA*/
CREATE TABLE PROPRIETARIO (
    IDPROPRIETARIO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30) NOT NULL,
    ENDERECO VARCHAR(50) NOT NULL
);

-- TABELA DE LOCATARIO
CREATE TABLE LOCATARIO (
    IDLOCATARIO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30) NOT NULL,
    ENDERECO VARCHAR(50) NOT NULL
);

-- TABELA DE SINDICO
CREATE TABLE SINDICO (
    ID_PROPRIETARIO INT UNIQUE,
    ID_CONDOMINIO INT UNIQUE,
    PRIMARY KEY (ID_CONDOMINIO, ID_PROPRIETARIO),
    TEMPO_EM_MESES INT,
    VIGENCIA_INICIO DATE,
    VIGENCIA_TERMINO DATE
);

-- TABELA DE UNIDADE HABITACIONAL
CREATE TABLE UNIDADE_HABITACIONAL (
    IDUNIDADE INT PRIMARY KEY AUTO_INCREMENT,
    ID_CONDOMINIO INT NOT NULL,
    ID_PROPRIETARIO INT NOT NULL,
    METRAGEM FLOAT,
    NUMEROCOMODOS INT,
    ENDERECO VARCHAR(50)
);

-- TABELA DE ALUGUEL
/* OPTAMOS POR UMA PK AGRUPANDO ESSAS 3 IDS PARA QUE NÃO SEJA POSSÍVEL ALUGAR UMA MESMA
   UNIDADE MAIS DE UMA VEZ */
CREATE TABLE ALUGUEL (
    ID_PROPRIETARIO INT,
    ID_CONDOMINIO INT,
    ID_LOCATARIO INT UNIQUE,
    ID_UNIDADE_HABITACIONAL INT UNIQUE,
    PRIMARY KEY(ID_PROPRIETARIO, ID_CONDOMINIO, ID_UNIDADE_HABITACIONAL)
);

-- TABELA DE TAXA
CREATE TABLE TAXA(
    IDTAXA INT PRIMARY KEY AUTO_INCREMENT,
    ID_CONDOMINIO INT,
    ID_UNIDADE_HABITACIONAL INT UNIQUE,
    DIA_EMISSAO INT,
    DIA_VIGENCIA INT
);

-- TABELA AUXILIAR PARA TAXA
CREATE TABLE RECEBIMENTO (
   IDRECEBIMENTO INT PRIMARY KEY AUTO_INCREMENT,
   ID_TAXA INT,
	VIGENCIA DATE,
   VALOR FLOAT,
   DATA_PAGAMENTO DATE
);
    
-- TABELA DE VENDA
CREATE TABLE VENDA (
    ID_NOVOPROP INT,
    ID_UNIDADE_HABITACIONAL INT,
    ID_CONDOMINIO INT,
    ID_PROPRIETARIO INT,
    PRIMARY KEY(ID_NOVOPROP, ID_UNIDADE_HABITACIONAL, ID_CONDOMINIO,ID_PROPRIETARIO)
);

/* ADICIONANDO AS FOREIGN KEYS - 
ORDEM DAS CONSTRAINTS: FK_TABELA PERTENCENTE_ TABELA DE ORIGEM */

-- FKs EM SINDICO
ALTER TABLE SINDICO ADD CONSTRAINT FK_SINDICO_PROPRIETARIO
FOREIGN KEY (ID_PROPRIETARIO) REFERENCES PROPRIETARIO(IDPROPRIETARIO);

ALTER TABLE SINDICO ADD CONSTRAINT FK_SINDICO_CONDOMINIO
FOREIGN KEY (ID_CONDOMINIO) REFERENCES CONDOMINIO(IDCONDOMINIO);

-- FKs EM UNIDADE HABITACIONAL
ALTER TABLE UNIDADE_HABITACIONAL ADD CONSTRAINT FK_UNIDADE_CONDOMINIO
FOREIGN KEY (ID_CONDOMINIO) REFERENCES CONDOMINIO(IDCONDOMINIO);

ALTER TABLE UNIDADE_HABITACIONAL ADD CONSTRAINT FK_UNIDADE_PROPRIETARIO
FOREIGN KEY (ID_PROPRIETARIO) REFERENCES PROPRIETARIO(IDPROPRIETARIO);

-- FKs EM ALUGUEL
ALTER TABLE ALUGUEL ADD CONSTRAINT FK_ALUGUEL_PROPRIETARIO
FOREIGN KEY (ID_PROPRIETARIO) REFERENCES PROPRIETARIO(IDPROPRIETARIO);

ALTER TABLE ALUGUEL ADD CONSTRAINT FK_ALUGUEL_CONDOMINIO
FOREIGN KEY (ID_CONDOMINIO) REFERENCES CONDOMINIO(IDCONDOMINIO);

ALTER TABLE ALUGUEL ADD CONSTRAINT FK_ALUGUEL_LOCATARIO
FOREIGN KEY (ID_LOCATARIO) REFERENCES LOCATARIO(IDLOCATARIO);

ALTER TABLE ALUGUEL ADD CONSTRAINT FK_ALUGUEL_UNIDADE
FOREIGN KEY (ID_UNIDADE_HABITACIONAL) REFERENCES UNIDADE_HABITACIONAL(IDUNIDADE);

-- FKs EM TAXA
ALTER TABLE TAXA ADD CONSTRAINT FK_TAXA_CONDOMINIO
FOREIGN KEY (ID_CONDOMINIO) REFERENCES CONDOMINIO(IDCONDOMINIO);

ALTER TABLE TAXA ADD CONSTRAINT FK_TAXA_UNIDADE
FOREIGN KEY (ID_UNIDADE_HABITACIONAL) REFERENCES UNIDADE_HABITACIONAL(IDUNIDADE);

-- FKs EM RECEBIMENTO
ALTER TABLE RECEBIMENTO ADD CONSTRAINT FK_RECEBIMENTO_TAXA
FOREIGN KEY (ID_TAXA) REFERENCES TAXA(IDTAXA);

-- FKS EM VENDA
ALTER TABLE VENDA ADD CONSTRAINT FK_VENDA_UNIDADEHAB
FOREIGN KEY VENDA(ID_UNIDADE_HABITACIONAL) REFERENCES UNIDADE_HABITACIONAL(IDUNIDADE);

ALTER TABLE VENDA ADD CONSTRAINT FK_VENDA_CONDOMINIO
FOREIGN KEY VENDA(ID_CONDOMINIO) REFERENCES CONDOMINIO(IDCONDOMINIO);

ALTER TABLE VENDA ADD CONSTRAINT FK_VENDA_PROPRIETARIO
FOREIGN KEY VENDA(ID_PROPRIETARIO) REFERENCES PROPRIETARIO(IDPROPRIETARIO);

ALTER TABLE VENDA ADD CONSTRAINT FK_VENDANOVOPROP_PROPRIETARIO
FOREIGN KEY VENDA(ID_NOVOPROP) REFERENCES PROPRIETARIO(IDPROPRIETARIO);

-- DESCREVENDO AS TABELAS
DESC UNIDADE_HABITACIONAL;
DESC PROPRIETARIO;
DESC LOCATARIO;
DESC taxa;
DESC RECEBIMENTO;
DESC CONDOMINIO;
DESC ALUGUEL;
DESC SINDICO;
DESC venda;

-- VERIFICANDO A EXISTÊNCIA DA(S) TRIGGER(S)
DROP TRIGGER IF EXISTS NEWPROP;

/* CRIANDO UMA TRIGGER PARA ATUALIZAR O PROPRIETARIO DA UNIDADE HABTICIONAL
AO CADASTRAR UMA VENDA */

DELIMITER !
CREATE TRIGGER NEWPROP
AFTER INSERT ON VENDA
FOR EACH ROW
BEGIN
    UPDATE UNIDADE_HABITACIONAL
    INNER JOIN VENDA
    ON VENDA.ID_PROPRIETARIO = UNIDADE_HABITACIONAL.ID_PROPRIETARIO
    SET UNIDADE_HABITACIONAL.ID_PROPRIETARIO = VENDA.ID_NOVOPROP
    WHERE VENDA.ID_UNIDADE_HABITACIONAL = UNIDADE_HABITACIONAL.IDUNIDADE;
    
	 UPDATE ALUGUEL
    INNER JOIN VENDA
    ON VENDA.ID_PROPRIETARIO = ALUGUEL.ID_PROPRIETARIO
    SET ALUGUEL.ID_PROPRIETARIO = VENDA.ID_NOVOPROP
    WHERE VENDA.ID_UNIDADE_HABITACIONAL = ALUGUEL.ID_UNIDADE_HABITACIONAL;
END
!
DELIMITER ;

-- TESTANDO A TRIGGER
/*
    SELECT U.IDUNIDADE, P.IDPROPRIETARIO, P.NOME, C.IDCONDOMINIO FROM UNIDADE_HABITACIONAL U
    INNER JOIN PROPRIETARIO P
    ON P.IDPROPRIETARIO = U.ID_PROPRIETARIO
    INNER JOIN CONDOMINIO C
    ON C.IDCONDOMINIO = U.ID_CONDOMINIO;

    +-----------+----------------+--------------+
    | IDUNIDADE | IDPROPRIETARIO | IDCONDOMINIO |
    +-----------+----------------+--------------+
    |         1 |              1 |            1 | ANTES O PROPRIETÁRIO DESTE APARTAMENTO ERA O ID 1
    |         2 |              1 |            2 |
    |         3 |              2 |            2 |
    |         4 |              3 |            3 |
    |         5 |              4 |            1 |
    +-----------+----------------+--------------+

    APÓS A INSERÇÃO DA VENDA, O ID DO PROPRIETÁRIO FOI ATUALIZADO PARA O NOVO PROPRIETÁRIO
    +-----------+----------------+---------------+--------------+
    | IDUNIDADE | IDPROPRIETARIO | NOME          | IDCONDOMINIO |
    +-----------+----------------+---------------+--------------+
    |         1 |             53 | ELIZABETH     |            1 |
    |         2 |              1 | MATHEUS ANJOS |            2 |
    |         3 |              2 | LUCAS         |            2 |
    |         4 |              3 | MARIA         |            3 |
    |         5 |              4 | LUANA         |            1 |
    +-----------+----------------+---------------+--------------+
*/

USE ADMINISTRADORA;

-- INSERÇÕES NA TABELA CONDOMINIO
INSERT INTO CONDOMINIO VALUES(NULL, "GUARAPARI CENTER", "CENTRO");
INSERT INTO CONDOMINIO VALUES(NULL, "NELSON MOTA", "CENTRO");
INSERT INTO CONDOMINIO VALUES(NULL, "VENETO", "PRAIA DO MORRO");
SELECT * FROM condominio;

-- INSERÇÕES NA TABELA PROPRIETÁRIO
INSERT INTO PROPRIETARIO VALUES(NULL, "MATHEUS ANJOS", "CENTRO");
INSERT INTO PROPRIETARIO VALUES(NULL, "LUCAS", "PRAIA DO MORRO");
INSERT INTO PROPRIETARIO VALUES(NULL, "MARIA", "MEAIPE");
INSERT INTO PROPRIETARIO VALUES(NULL, "LUANA", "IPIRANGA");
SELECT * FROM proprietario;

-- INSERÇÕES NA TABELA LOCATARIO 
INSERT INTO LOCATARIO VALUES(NULL, "GILBERTO", "CONFINS");
INSERT INTO LOCATARIO VALUES(NULL, "JOAO", "COROADO");
INSERT INTO LOCATARIO VALUES(NULL, "JULIA", "SANTA MONICA");
SELECT * FROM locatario;

-- INSERÇÕES NA TABELA SINDICO
INSERT INTO SINDICO VALUES(1,1, 3, NOW(), '2022-04-26');
INSERT INTO SINDICO VALUES(2,2, 3, NOW(), '2022-04-26');
INSERT INTO SINDICO VALUES(3,3, 3, NOW(), '2022-04-26');	
SELECT * FROM sindico;

-- INSERÇÕES NA TABELA UNIDADE HABITACIONAL
/* O PROPRIETARIO 1 TEM DOIS APARTAMENTOS EM DOIS CONDOMINIOS DIFERENTES. */
INSERT INTO unidade_habitacional VALUES (NULL, 1, 1, 110,6,"IPIRANGA");
INSERT INTO unidade_habitacional VALUES (NULL, 2, 1, 100,4,"IPIRANGA");
INSERT INTO unidade_habitacional VALUES (NULL, 2, 2, 80,3,"IPIRANGA");
INSERT INTO unidade_habitacional VALUES (NULL, 3, 3, 200,10,"IPIRANGA");
INSERT INTO unidade_habitacional VALUES (NULL, 1, 4, 150,8,"IPIRANGA");
SELECT * FROM unidade_habitacional;

-- INSERÇÕES NA TABELA ALUGUEL
INSERT INTO aluguel VALUES(1,1,1,1);
INSERT INTO aluguel VALUES(1,2,3,2);
INSERT INTO aluguel VALUES(2,2,2,3);
SELECT * FROM aluguel;

-- INSERÇÕES NA TABELA TAXA

INSERT INTO taxa VALUES (NULL,2,2,10,10);
INSERT INTO taxa VALUES (NULL,1,1,10,10);
INSERT INTO taxa VALUES (NULL,3,3,10,10);
SELECT * FROM taxa;

-- INSERÇÕES NA TABELA RECEBIMENTO
INSERT INTO RECEBIMENTO VALUES 
	(NULL,
	 2, 
	 CAST(CONCAT("2022-02-",(SELECT DIA_VIGENCIA FROM TAXA T WHERE T.IDTAXA = 2)) AS DATE),
	 250, 
	 "2022-02-08");
INSERT INTO RECEBIMENTO VALUES 
	(NULL,
	 1, 
	 CAST(CONCAT("2022-02-",(SELECT DIA_VIGENCIA FROM TAXA T WHERE T.IDTAXA = 1)) AS DATE),
	 250, 
	 "2022-02-11");
INSERT INTO RECEBIMENTO VALUES 
	(NULL,
	 3, 
	 CAST(CONCAT("2022-02-",(SELECT DIA_VIGENCIA FROM TAXA T WHERE T.IDTAXA = 3)) AS DATE),
	 250, 
	 NULL);
INSERT INTO RECEBIMENTO VALUES 
	(NULL,
	 2, 
	 CAST(CONCAT("2022-03-",(SELECT DIA_VIGENCIA FROM TAXA T WHERE T.IDTAXA = 2)) AS DATE),
	 250, 
	 "2022-03-08");
SELECT * FROM recebimento;

-- INSERÇÕES NA TABELA VENDA
/*PARA REALIZAR UMA VENDA, 
É NECESSÁRIO PRIMEIRO CADASTRAR O COMPRADOR COMO UM NOVO PROPRIETARIO*/
INSERT INTO PROPRIETARIO VALUES (NULL, "ELIZABETH", "VITÓRIA - CENTRO");
INSERT INTO PROPRIETARIO VALUES (NULL, "RUTE", "COROADO");
SELECT * FROM PROPRIETARIO;

-- E ENTÃO REALIZAR O CADASTRO DA VENDA NA SEGUINTE ORDEM:
-- ID_NOVOPROP, ID_UNIDADE_HABITACIONAL, ID_CONDOMINIO,ID_PROPRIETARIO
/*QUANDO HOUVER UMA INSERÇÃO NA TABELA DE VENDAS, CASO OS DADOS 
ESTEJAM ERRADOS, A TABELA UNIDADE_HABITACIONAL NÃO SOFRERÁ UPDATE, 
MAS A INSERÇÃO OCORRERÁ NA TABELA DE VENDAS*/

INSERT INTO VENDA VALUES (5,1,1,1);
-- ESTE SEGUNDO INSERT É UM EXEMPLO DE INSERÇÃO ERRADA
INSERT INTO VENDA VALUES (6,2,1,2);

/* TESTANDO A PK DE ALUGUEL */
DELETE FROM ALUGUEL WHERE ID_LOCATARIO = 2;
/* MOSTRARÁ UMA MENSAGEM DE ERRO, MOSTRANDO QUE JÁ HÁ UM REGISTRO NESSA 
	unidade habitacional */
INSERT INTO ALUGUEL VALUES(2,2,2,1);

SELECT * FROM PROPRIETARIO;
SELECT * FROM unidade_habitacional;
SELECT * FROM taxa;
SELECT * FROM ALUGUEL;
SELECT * FROM venda;
